# -*- coding: utf-8 -*-

################################################################################
## Form generated from reading UI file 'user_interface.ui'
##
## Created by: Qt User Interface Compiler version 6.7.0
##
## WARNING! All changes made in this file will be lost when recompiling UI file!
################################################################################

from PySide6.QtCore import QCoreApplication, QLocale, QMetaObject, QRect, QSize, Qt
from PySide6.QtGui import QAction, QCursor, QFont, QIcon
from PySide6.QtWidgets import (
        QAbstractItemView, QApplication, QCheckBox, 
        QDoubleSpinBox, QGroupBox, QLabel, 
        QLineEdit, QListView, QMainWindow, 
        QMenu, QMenuBar, QProgressBar, 
        QPushButton, QSizePolicy, QSpinBox, 
        QStatusBar, QTabWidget, QWidget)

class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        if not MainWindow.objectName():
            MainWindow.setObjectName(u"MainWindow")
        MainWindow.setWindowModality(Qt.WindowModality.NonModal)
        MainWindow.resize(1025, 544)
        sizePolicy = QSizePolicy(QSizePolicy.Policy.Fixed, QSizePolicy.Policy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(MainWindow.sizePolicy().hasHeightForWidth())
        MainWindow.setSizePolicy(sizePolicy)
        MainWindow.setMinimumSize(QSize(1025, 544))
        MainWindow.setMaximumSize(QSize(1025, 544))
        font = QFont()
        font.setFamilies([u"Roboto"])
        font.setPointSize(8)
        font.setBold(False)
        font.setItalic(False)
        font.setUnderline(False)
        font.setStrikeOut(False)
        font.setKerning(True)
        font.setStyleStrategy(QFont.PreferDefault)
        MainWindow.setFont(font)
        icon = QIcon()
        icon.addFile(u"../icon.ico", QSize(), QIcon.Normal, QIcon.Off)
        MainWindow.setWindowIcon(icon)
        MainWindow.setWindowOpacity(1.000000000000000)
        MainWindow.setAutoFillBackground(False)
        MainWindow.setStyleSheet(u"")
        MainWindow.setLocale(QLocale(QLocale.English, QLocale.UnitedStates))
        MainWindow.setInputMethodHints(Qt.InputMethodHint.ImhNone)
        MainWindow.setIconSize(QSize(32, 32))
        MainWindow.setDocumentMode(False)
        MainWindow.setTabShape(QTabWidget.TabShape.Rounded)
        MainWindow.setDockNestingEnabled(False)
        MainWindow.setDockOptions(QMainWindow.DockOption.AllowTabbedDocks|QMainWindow.DockOption.AnimatedDocks)
        MainWindow.setUnifiedTitleAndToolBarOnMac(True)
        self.actionFrame_Editor = QAction(MainWindow)
        self.actionFrame_Editor.setObjectName(u"actionFrame_Editor")
        self.centralwidget = QWidget(MainWindow)
        self.centralwidget.setObjectName(u"centralwidget")
        self.centralwidget.setEnabled(True)
        sizePolicy.setHeightForWidth(self.centralwidget.sizePolicy().hasHeightForWidth())
        self.centralwidget.setSizePolicy(sizePolicy)
        self.centralwidget.setMaximumSize(QSize(1025, 544))
        self.progressBar = QProgressBar(self.centralwidget)
        self.progressBar.setObjectName(u"progressBar")
        self.progressBar.setGeometry(QRect(10, 10, 1001, 23))
        sizePolicy.setHeightForWidth(self.progressBar.sizePolicy().hasHeightForWidth())
        self.progressBar.setSizePolicy(sizePolicy)
        self.progressBar.setMaximum(100)
        self.progressBar.setValue(0)
        self.progressBar.setTextVisible(True)
        self.input_ui_group = QGroupBox(self.centralwidget)
        self.input_ui_group.setObjectName(u"input_ui_group")
        self.input_ui_group.setGeometry(QRect(460, 40, 551, 51))
        self.input_ui_group.setAlignment(Qt.AlignmentFlag.AlignCenter)
        self.input_ui_group.setFlat(False)
        self.input_ui_location = QLineEdit(self.input_ui_group)
        self.input_ui_location.setObjectName(u"input_ui_location")
        self.input_ui_location.setGeometry(QRect(10, 20, 471, 20))
        self.input_ui_location.setAlignment(Qt.AlignmentFlag.AlignCenter)
        self.input_ui_location.setClearButtonEnabled(False)
        self.input_ui_button = QPushButton(self.input_ui_group)
        self.input_ui_button.setObjectName(u"input_ui_button")
        self.input_ui_button.setGeometry(QRect(490, 20, 51, 21))
        self.input_ui_button.setCursor(QCursor(Qt.ArrowCursor))
        self.input_ui_button.setToolTipDuration(-1)
        self.input_ui_button.setAutoFillBackground(False)
        self.output_ui_group = QGroupBox(self.centralwidget)
        self.output_ui_group.setObjectName(u"output_ui_group")
        self.output_ui_group.setGeometry(QRect(460, 110, 551, 51))
        self.output_ui_group.setAlignment(Qt.AlignmentFlag.AlignCenter)
        self.output_ui_group.setFlat(False)
        self.output_ui_location = QLineEdit(self.output_ui_group)
        self.output_ui_location.setObjectName(u"output_ui_location")
        self.output_ui_location.setGeometry(QRect(10, 20, 471, 20))
        self.output_ui_location.setInputMethodHints(Qt.InputMethodHint.ImhNone)
        self.output_ui_location.setFrame(True)
        self.output_ui_location.setAlignment(Qt.AlignmentFlag.AlignCenter)
        self.output_ui_location.setReadOnly(False)
        self.output_ui_location.setClearButtonEnabled(False)
        self.output_ui_button = QPushButton(self.output_ui_group)
        self.output_ui_button.setObjectName(u"output_ui_button")
        self.output_ui_button.setGeometry(QRect(490, 20, 51, 21))
        self.output_ui_button.setCheckable(False)
        self.output_ui_button.setFlat(False)
        self.generate_ui_group = QGroupBox(self.centralwidget)
        self.generate_ui_group.setObjectName(u"generate_ui_group")
        self.generate_ui_group.setGeometry(QRect(460, 180, 551, 241))
        self.generate_ui_group.setFont(font)
        self.generate_ui_group.setAlignment(Qt.AlignmentFlag.AlignCenter)
        self.generate_ui_group.setFlat(False)
        self.generate_ui_group.setCheckable(True)
        self.generate_ui_group.setChecked(False)
        self.gif_ui_checkbox = QCheckBox(self.generate_ui_group)
        self.gif_ui_checkbox.setObjectName(u"gif_ui_checkbox")
        self.gif_ui_checkbox.setGeometry(QRect(210, 30, 51, 21))
        self.gif_ui_checkbox.setTristate(False)
        self.webp_ui_checkbox = QCheckBox(self.generate_ui_group)
        self.webp_ui_checkbox.setObjectName(u"webp_ui_checkbox")
        self.webp_ui_checkbox.setGeometry(QRect(290, 30, 61, 21))
        self.webp_ui_checkbox.setChecked(False)
        self.webp_ui_checkbox.setAutoRepeat(False)
        self.global_settings_ui_group = QGroupBox(self.generate_ui_group)
        self.global_settings_ui_group.setObjectName(u"global_settings_ui_group")
        self.global_settings_ui_group.setGeometry(QRect(40, 70, 201, 131))
        self.global_settings_ui_group.setAlignment(Qt.AlignmentFlag.AlignCenter)
        self.global_settings_ui_group.setFlat(False)
        self.global_settings_ui_group.setCheckable(False)
        self.fps_ui_stepper = QSpinBox(self.global_settings_ui_group)
        self.fps_ui_stepper.setObjectName(u"fps_ui_stepper")
        self.fps_ui_stepper.setGeometry(QRect(110, 30, 81, 22))
        self.fps_ui_stepper.setAlignment(Qt.AlignmentFlag.AlignCenter)
        self.fps_ui_stepper.setAccelerated(False)
        self.fps_ui_stepper.setProperty("showGroupSeparator", False)
        self.fps_ui_stepper.setMaximum(999)
        self.fps_ui_stepper.setValue(24)
        self.delay_ui_stepper = QSpinBox(self.global_settings_ui_group)
        self.delay_ui_stepper.setObjectName(u"delay_ui_stepper")
        self.delay_ui_stepper.setGeometry(QRect(110, 60, 81, 21))
        self.delay_ui_stepper.setWrapping(False)
        self.delay_ui_stepper.setFrame(True)
        self.delay_ui_stepper.setAlignment(Qt.AlignmentFlag.AlignCenter)
        self.delay_ui_stepper.setMaximum(999)
        self.delay_ui_stepper.setValue(0)
        self.delay_ui_stepper.setDisplayIntegerBase(10)
        self.alpha_ui_stepper = QDoubleSpinBox(self.global_settings_ui_group)
        self.alpha_ui_stepper.setObjectName(u"alpha_ui_stepper")
        self.alpha_ui_stepper.setGeometry(QRect(111, 90, 81, 22))
        self.alpha_ui_stepper.setInputMethodHints(Qt.InputMethodHint.ImhDigitsOnly|Qt.InputMethodHint.ImhFormattedNumbersOnly)
        self.alpha_ui_stepper.setAlignment(Qt.AlignmentFlag.AlignCenter)
        self.alpha_ui_stepper.setMaximum(1.000000000000000)
        self.alpha_ui_stepper.setSingleStep(0.010000000000000)
        self.alpha_ui_stepper.setValue(0.500000000000000)
        self.fps_ui_label = QLabel(self.global_settings_ui_group)
        self.fps_ui_label.setObjectName(u"fps_ui_label")
        self.fps_ui_label.setGeometry(QRect(10, 30, 101, 21))
        self.fps_ui_label.setAlignment(Qt.AlignmentFlag.AlignLeading|Qt.AlignmentFlag.AlignLeft|Qt.AlignmentFlag.AlignVCenter)
        self.delay_ui_label = QLabel(self.global_settings_ui_group)
        self.delay_ui_label.setObjectName(u"delay_ui_label")
        self.delay_ui_label.setGeometry(QRect(10, 60, 91, 21))
        self.delay_ui_label.setAlignment(Qt.AlignmentFlag.AlignLeading|Qt.AlignmentFlag.AlignLeft|Qt.AlignmentFlag.AlignVCenter)
        self.alpha_ui_label = QLabel(self.global_settings_ui_group)
        self.alpha_ui_label.setObjectName(u"alpha_ui_label")
        self.alpha_ui_label.setGeometry(QRect(10, 90, 91, 21))
        self.alpha_ui_label.setAlignment(Qt.AlignmentFlag.AlignLeading|Qt.AlignmentFlag.AlignLeft|Qt.AlignmentFlag.AlignVCenter)
        self.override_settings_ui_group = QGroupBox(self.generate_ui_group)
        self.override_settings_ui_group.setObjectName(u"override_settings_ui_group")
        self.override_settings_ui_group.setGeometry(QRect(310, 70, 201, 131))
        self.override_settings_ui_group.setAlignment(Qt.AlignmentFlag.AlignCenter)
        self.override_settings_ui_group.setFlat(False)
        self.override_settings_ui_group.setCheckable(True)
        self.override_settings_ui_group.setChecked(False)
        self.fps_ui_stepper_override = QSpinBox(self.override_settings_ui_group)
        self.fps_ui_stepper_override.setObjectName(u"fps_ui_stepper_override")
        self.fps_ui_stepper_override.setGeometry(QRect(110, 30, 81, 22))
        self.fps_ui_stepper_override.setAlignment(Qt.AlignmentFlag.AlignCenter)
        self.fps_ui_stepper_override.setAccelerated(False)
        self.fps_ui_stepper_override.setProperty("showGroupSeparator", False)
        self.fps_ui_stepper_override.setMaximum(999)
        self.fps_ui_stepper_override.setValue(24)
        self.delay_ui_stepper_override = QSpinBox(self.override_settings_ui_group)
        self.delay_ui_stepper_override.setObjectName(u"delay_ui_stepper_override")
        self.delay_ui_stepper_override.setGeometry(QRect(110, 60, 81, 21))
        self.delay_ui_stepper_override.setWrapping(False)
        self.delay_ui_stepper_override.setFrame(True)
        self.delay_ui_stepper_override.setAlignment(Qt.AlignmentFlag.AlignCenter)
        self.delay_ui_stepper_override.setMaximum(999)
        self.delay_ui_stepper_override.setValue(0)
        self.delay_ui_stepper_override.setDisplayIntegerBase(10)
        self.alpha_ui_stepper_override = QDoubleSpinBox(self.override_settings_ui_group)
        self.alpha_ui_stepper_override.setObjectName(u"alpha_ui_stepper_override")
        self.alpha_ui_stepper_override.setGeometry(QRect(111, 90, 81, 22))
        self.alpha_ui_stepper_override.setInputMethodHints(Qt.InputMethodHint.ImhDigitsOnly|Qt.InputMethodHint.ImhFormattedNumbersOnly)
        self.alpha_ui_stepper_override.setAlignment(Qt.AlignmentFlag.AlignCenter)
        self.alpha_ui_stepper_override.setMaximum(1.000000000000000)
        self.alpha_ui_stepper_override.setSingleStep(0.010000000000000)
        self.alpha_ui_stepper_override.setValue(0.500000000000000)
        self.fps_ui_label_override = QLabel(self.override_settings_ui_group)
        self.fps_ui_label_override.setObjectName(u"fps_ui_label_override")
        self.fps_ui_label_override.setGeometry(QRect(10, 30, 111, 21))
        self.fps_ui_label_override.setAlignment(Qt.AlignmentFlag.AlignLeading|Qt.AlignmentFlag.AlignLeft|Qt.AlignmentFlag.AlignVCenter)
        self.delay_ui_label_override = QLabel(self.override_settings_ui_group)
        self.delay_ui_label_override.setObjectName(u"delay_ui_label_override")
        self.delay_ui_label_override.setGeometry(QRect(10, 60, 111, 21))
        self.delay_ui_label_override.setAlignment(Qt.AlignmentFlag.AlignLeading|Qt.AlignmentFlag.AlignLeft|Qt.AlignmentFlag.AlignVCenter)
        self.alpha_ui_label_sprite_override = QLabel(self.override_settings_ui_group)
        self.alpha_ui_label_sprite_override.setObjectName(u"alpha_ui_label_sprite_override")
        self.alpha_ui_label_sprite_override.setGeometry(QRect(10, 90, 111, 21))
        self.alpha_ui_label_sprite_override.setAlignment(Qt.AlignmentFlag.AlignLeading|Qt.AlignmentFlag.AlignLeft|Qt.AlignmentFlag.AlignVCenter)
        self.filelist_ui_group = QGroupBox(self.centralwidget)
        self.filelist_ui_group.setObjectName(u"filelist_ui_group")
        self.filelist_ui_group.setGeometry(QRect(10, 40, 431, 451))
        sizePolicy.setHeightForWidth(self.filelist_ui_group.sizePolicy().hasHeightForWidth())
        self.filelist_ui_group.setSizePolicy(sizePolicy)
        self.filelist_ui_group.setAlignment(Qt.AlignmentFlag.AlignCenter)
        self.filelist_ui_group.setFlat(False)
        self.filelist_ui_group.setCheckable(False)
        self.filelist_ui_group.setChecked(False)
        self.spritelist_ui_box = QListView(self.filelist_ui_group)
        self.spritelist_ui_box.setObjectName(u"spritelist_ui_box")
        self.spritelist_ui_box.setGeometry(QRect(10, 20, 201, 381))
        self.spritelist_ui_box.setFont(font)
        self.spritelist_ui_box.setLineWidth(2)
        self.spritelist_ui_box.setVerticalScrollBarPolicy(Qt.ScrollBarPolicy.ScrollBarAsNeeded)
        self.spritelist_ui_box.setHorizontalScrollBarPolicy(Qt.ScrollBarPolicy.ScrollBarAsNeeded)
        self.spritelist_ui_box.setAutoScroll(True)
        self.spritelist_ui_box.setEditTriggers(QAbstractItemView.EditTrigger.NoEditTriggers)
        self.spritelist_ui_box.setProperty("showDropIndicator", False)
        self.spritelist_ui_box.setModelColumn(0)
        self.spritelist_ui_box.setUniformItemSizes(False)
        self.animationlist_ui_box = QListView(self.filelist_ui_group)
        self.animationlist_ui_box.setObjectName(u"animationlist_ui_box")
        self.animationlist_ui_box.setGeometry(QRect(220, 20, 201, 381))
        self.animationlist_ui_box.setFont(font)
        self.animationlist_ui_box.setLineWidth(2)
        self.animationlist_ui_box.setVerticalScrollBarPolicy(Qt.ScrollBarPolicy.ScrollBarAsNeeded)
        self.animationlist_ui_box.setHorizontalScrollBarPolicy(Qt.ScrollBarPolicy.ScrollBarAsNeeded)
        self.animationlist_ui_box.setAutoScroll(True)
        self.animationlist_ui_box.setEditTriggers(QAbstractItemView.EditTrigger.NoEditTriggers)
        self.animationlist_ui_box.setProperty("showDropIndicator", False)
        self.animationlist_ui_box.setModelColumn(0)
        self.animationlist_ui_box.setUniformItemSizes(False)
        self.edit_ui_button = QPushButton(self.filelist_ui_group)
        self.edit_ui_button.setObjectName(u"edit_ui_button")
        self.edit_ui_button.setGeometry(QRect(220, 410, 201, 31))
        self.edit_ui_button_2 = QPushButton(self.filelist_ui_group)
        self.edit_ui_button_2.setObjectName(u"edit_ui_button_2")
        self.edit_ui_button_2.setGeometry(QRect(10, 410, 201, 31))
        self.startButton = QPushButton(self.centralwidget)
        self.startButton.setObjectName(u"startButton")
        self.startButton.setGeometry(QRect(680, 450, 111, 31))
        MainWindow.setCentralWidget(self.centralwidget)
        self.generate_ui_group.raise_()
        self.progressBar.raise_()
        self.input_ui_group.raise_()
        self.output_ui_group.raise_()
        self.filelist_ui_group.raise_()
        self.startButton.raise_()
        self.statusbar = QStatusBar(MainWindow)
        self.statusbar.setObjectName(u"statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.menuBar = QMenuBar(MainWindow)
        self.menuBar.setObjectName(u"menuBar")
        self.menuBar.setGeometry(QRect(0, 0, 1025, 33))
        self.menuAbout = QMenu(self.menuBar)
        self.menuAbout.setObjectName(u"menuAbout")
        MainWindow.setMenuBar(self.menuBar)

        self.menuBar.addAction(self.menuAbout.menuAction())

        self.retranslateUi(MainWindow)

        self.output_ui_button.setDefault(False)


        QMetaObject.connectSlotsByName(MainWindow)
    # setupUi

    def retranslateUi(self, MainWindow):
        MainWindow.setWindowTitle(QCoreApplication.translate("MainWindow", u"TextureAtlas to Frames and GIFs", None))
#if QT_CONFIG(statustip)
        MainWindow.setStatusTip("")
#endif // QT_CONFIG(statustip)
        self.actionFrame_Editor.setText(QCoreApplication.translate("MainWindow", u"Frame Editor", None))
#if QT_CONFIG(statustip)
        self.progressBar.setStatusTip(QCoreApplication.translate("MainWindow", u"Progress", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(statustip)
        self.input_ui_group.setStatusTip(QCoreApplication.translate("MainWindow", u"Choose a folder with spritesheets. (Automatically looks for .png and .xml files).", None))
#endif // QT_CONFIG(statustip)
        self.input_ui_group.setTitle(QCoreApplication.translate("MainWindow", u"Input", None))
#if QT_CONFIG(statustip)
        self.input_ui_location.setStatusTip(QCoreApplication.translate("MainWindow", u"Choose a folder with spritesheets. (Automatically looks for .png and .xml files).", None))
#endif // QT_CONFIG(statustip)
        self.input_ui_location.setInputMask("")
        self.input_ui_location.setPlaceholderText(QCoreApplication.translate("MainWindow", u"Enter or browse for a directory with spritesheets", None))
#if QT_CONFIG(tooltip)
        self.input_ui_button.setToolTip(QCoreApplication.translate("MainWindow", u"<html><head/><body><p>Opens up a file browser</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.input_ui_button.setStatusTip(QCoreApplication.translate("MainWindow", u"Choose a folder with spritesheets. (Automatically looks for .png and .xml files).", None))
#endif // QT_CONFIG(statustip)
        self.input_ui_button.setText(QCoreApplication.translate("MainWindow", u"Browse", None))
#if QT_CONFIG(statustip)
        self.output_ui_group.setStatusTip(QCoreApplication.translate("MainWindow", u"Choose a folder for the extracted frames.", None))
#endif // QT_CONFIG(statustip)
        self.output_ui_group.setTitle(QCoreApplication.translate("MainWindow", u"Output", None))
#if QT_CONFIG(statustip)
        self.output_ui_location.setStatusTip(QCoreApplication.translate("MainWindow", u"Choose a folder for the extracted frames.", None))
#endif // QT_CONFIG(statustip)
        self.output_ui_location.setInputMask("")
        self.output_ui_location.setText("")
        self.output_ui_location.setPlaceholderText(QCoreApplication.translate("MainWindow", u"Enter or browse for a save directory", None))
#if QT_CONFIG(statustip)
        self.output_ui_button.setStatusTip(QCoreApplication.translate("MainWindow", u"Choose a folder for the extracted frames.", None))
#endif // QT_CONFIG(statustip)
        self.output_ui_button.setText(QCoreApplication.translate("MainWindow", u"Browse", None))
#if QT_CONFIG(statustip)
        self.generate_ui_group.setStatusTip(QCoreApplication.translate("MainWindow", u"Generate animated images from extracted frames.", None))
#endif // QT_CONFIG(statustip)
        self.generate_ui_group.setTitle(QCoreApplication.translate("MainWindow", u"Generate animated images?", None))
#if QT_CONFIG(statustip)
        self.gif_ui_checkbox.setStatusTip(QCoreApplication.translate("MainWindow", u"Create GIFs for each sprite animation.", None))
#endif // QT_CONFIG(statustip)
        self.gif_ui_checkbox.setText(QCoreApplication.translate("MainWindow", u"GIFs", None))
#if QT_CONFIG(statustip)
        self.webp_ui_checkbox.setStatusTip(QCoreApplication.translate("MainWindow", u"Create WebPs for each sprite animation.", None))
#endif // QT_CONFIG(statustip)
        self.webp_ui_checkbox.setText(QCoreApplication.translate("MainWindow", u"WebPs", None))
#if QT_CONFIG(statustip)
        self.global_settings_ui_group.setStatusTip(QCoreApplication.translate("MainWindow", u" Global settings are applied to all animated images unless you choose to override for a specific animation.", None))
#endif // QT_CONFIG(statustip)
        self.global_settings_ui_group.setTitle(QCoreApplication.translate("MainWindow", u"Global Settings", None))
#if QT_CONFIG(statustip)
        self.fps_ui_stepper.setStatusTip(QCoreApplication.translate("MainWindow", u"Sets the frame rate of the animation. (NOTE: The 'FPS' is converted to 'ms' and rounded to the nearest whole number).", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(statustip)
        self.delay_ui_stepper.setStatusTip(QCoreApplication.translate("MainWindow", u"Sets how long the last frame of the animation should be shown. (Recommended values 250-500ms).", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(statustip)
        self.alpha_ui_stepper.setStatusTip(QCoreApplication.translate("MainWindow", u"Sets the transparency threshold. Leave value at '0.50' if you're unsure. (GIFs only!).", None))
#endif // QT_CONFIG(statustip)
        self.alpha_ui_stepper.setPrefix("")
#if QT_CONFIG(statustip)
        self.fps_ui_label.setStatusTip(QCoreApplication.translate("MainWindow", u"Sets the frame rate of the animation. (NOTE: The 'FPS' is converted to 'ms' and rounded to the nearest whole number).", None))
#endif // QT_CONFIG(statustip)
        self.fps_ui_label.setText(QCoreApplication.translate("MainWindow", u"Frame Rate (FPS):", None))
#if QT_CONFIG(statustip)
        self.delay_ui_label.setStatusTip(QCoreApplication.translate("MainWindow", u"Sets how long the last frame of the animation should be shown. (Recommended values 250-500ms).", None))
#endif // QT_CONFIG(statustip)
        self.delay_ui_label.setText(QCoreApplication.translate("MainWindow", u"Loop Delay (ms):", None))
#if QT_CONFIG(statustip)
        self.alpha_ui_label.setStatusTip(QCoreApplication.translate("MainWindow", u"Sets the transparency threshold. Leave value at '0.50' if you're unsure. (GIFs only!).", None))
#endif // QT_CONFIG(statustip)
        self.alpha_ui_label.setText(QCoreApplication.translate("MainWindow", u"Alpha Threshold:", None))
#if QT_CONFIG(statustip)
        self.override_settings_ui_group.setStatusTip(QCoreApplication.translate("MainWindow", u"Override Global Settings for the selected animation.", None))
#endif // QT_CONFIG(statustip)
        self.override_settings_ui_group.setTitle(QCoreApplication.translate("MainWindow", u"Override for selected animation", None))
#if QT_CONFIG(statustip)
        self.fps_ui_stepper_override.setStatusTip(QCoreApplication.translate("MainWindow", u"Overrides the frame rate of the selected animation. (NOTE: The 'FPS' is converted to 'ms' and rounded to the nearest whole number).", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(statustip)
        self.delay_ui_stepper_override.setStatusTip(QCoreApplication.translate("MainWindow", u"Overrides how long the last frame of the selected animation should be shown. (Recommended values 250-500ms).", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(statustip)
        self.alpha_ui_stepper_override.setStatusTip(QCoreApplication.translate("MainWindow", u"Overrides the transparency threshold of the selected animation. Leave value at '0.50' if you're unsure. (GIFs only!).", None))
#endif // QT_CONFIG(statustip)
        self.alpha_ui_stepper_override.setPrefix("")
#if QT_CONFIG(statustip)
        self.fps_ui_label_override.setStatusTip(QCoreApplication.translate("MainWindow", u"Overrides the frame rate of the selected animation. (NOTE: The 'FPS' is converted to 'ms' and rounded to the nearest whole number).", None))
#endif // QT_CONFIG(statustip)
        self.fps_ui_label_override.setText(QCoreApplication.translate("MainWindow", u"Frame Rate (FPS):", None))
#if QT_CONFIG(statustip)
        self.delay_ui_label_override.setStatusTip(QCoreApplication.translate("MainWindow", u"Overrides how long the last frame of the selected animation should be shown. (Recommended values 250-500ms).", None))
#endif // QT_CONFIG(statustip)
        self.delay_ui_label_override.setText(QCoreApplication.translate("MainWindow", u"Loop Delay (ms):", None))
#if QT_CONFIG(statustip)
        self.alpha_ui_label_sprite_override.setStatusTip(QCoreApplication.translate("MainWindow", u"Overrides the transparency threshold of the selected animation. Leave value at '0.50' if you're unsure. (GIFs only!).", None))
#endif // QT_CONFIG(statustip)
        self.alpha_ui_label_sprite_override.setText(QCoreApplication.translate("MainWindow", u"Alpha Threshold:", None))
        self.filelist_ui_group.setTitle(QCoreApplication.translate("MainWindow", u"Filelist", None))
#if QT_CONFIG(statustip)
        self.spritelist_ui_box.setStatusTip(QCoreApplication.translate("MainWindow", u"Spritesheets found in the input folder", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(statustip)
        self.animationlist_ui_box.setStatusTip(QCoreApplication.translate("MainWindow", u"Spritesheets found in the input folder", None))
#endif // QT_CONFIG(statustip)
        self.edit_ui_button.setText(QCoreApplication.translate("MainWindow", u"Frame Editor (Not implemented yet)", None))
        self.edit_ui_button_2.setText(QCoreApplication.translate("MainWindow", u"View Sprite (Not implemented yet)", None))
#if QT_CONFIG(statustip)
        self.startButton.setStatusTip(QCoreApplication.translate("MainWindow", u"Execute tasks.", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(whatsthis)
        self.startButton.setWhatsThis("")
#endif // QT_CONFIG(whatsthis)
        self.startButton.setText(QCoreApplication.translate("MainWindow", u"Start", None))
        self.menuAbout.setTitle(QCoreApplication.translate("MainWindow", u"About", None))
    # retranslateUi